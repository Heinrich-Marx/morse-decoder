const MORSE_TABLE = {
    '.-':     'a',
    '-...':   'b',
    '-.-.':   'c',
    '-..':    'd',
    '.':      'e',
    '..-.':   'f',
    '--.':    'g',
    '....':   'h',
    '..':     'i',
    '.---':   'j',
    '-.-':    'k',
    '.-..':   'l',
    '--':     'm',              
    '-.':     'n',
    '---':    'o',
    '.--.':   'p',
    '--.-':   'q',
    '.-.':    'r',
    '...':    's',
    '-':      't',
    '..-':    'u',
    '...-':   'v',
    '.--':    'w',
    '-..-':   'x',
    '-.--':   'y',
    '--..':   'z',
    '.----':  '1',
    '..---':  '2',
    '...--':  '3',
    '....-':  '4',
    '.....':  '5',
    '-....':  '6',
    '--...':  '7',
    '---..':  '8',
    '----.':  '9',
    '-----':  '0',
};

function decode(expr) {
    let b;
    let a = [];
    let c = ''
    let str = ''
   // expr = expr.toString();
    expr = expr.match(/.{1,10}/g); 
    for (let i = 0; i<expr.length; i++) {
        b = expr[i].match(/10|11|\*{10}/g);
        for (let j = 0; j<b.length; j++) {
            if (b[j] == '10') 
                b[j] = '.';
            else if (b[j] == '11')
                b[j] = '-';
            else if (b[j] == '**********')
                b[j] = ' ';   
    
        }
        if (b == ' ') {
            str += ' '
            b = ''
        }    
        else {
            b = b.join('')
        // c += b;
            //b = '';
            str += MORSE_TABLE[b]
            b = ''
        }

    }
    return str
}
module.exports = {
    decode
}

/*let q = "000000001100101010100000000010**********00111110110000101011000000101000111011100000111011**********00111010100000101110000011111100001011110000001110**********001010111000001111110011101011**********00101111110000101011000000111100101111100000101010**********0000111111001010101100000000100000101110**********000000001100101010100000000010**********0010111010000000101100111110100011101111**********000011101000001111110000111110";
let q = q.match(/.{1,10}/g);
let a = q.match(/10|11|\*{10}/g);
console.log(a;)


let MORSE_TABLE = {
    '.-':     'a',
    '-...':   'b',
    '-.-.':   'c',
    '-..':    'd',
    '.':      'e',
    '..-.':   'f',
    '--.':    'g',
    '....':   'h',
    '..':     'i',
    '.---':   'j',
    '-.-':    'k',
    '.-..':   'l',
    '--':     'm',              
    '-.':     'n',
    '---':    'o',
    '.--.':   'p',
    '--.-':   'q',
    '.-.':    'r',
    '...':    's',
    '-':      't',
    '..-':    'u',
    '...-':   'v',
    '.--':    'w',
    '-..-':   'x',
    '-.--':   'y',
    '--..':   'z',
    '.----':  '1',
    '..---':  '2',
    '...--':  '3',
    '....-':  '4',
    '.....':  '5',
    '-....':  '6',
    '--...':  '7',
    '---..':  '8',
    '----.':  '9',
    '-----':  '0',
};

let q = "000000001100101010100000000010**********00111110110000101011000000101000111011100000111011**********00111010100000101110000011111100001011110000001110**********001010111000001111110011101011**********00101111110000101011000000111100101111100000101010**********0000111111001010101100000000100000101110**********000000001100101010100000000010**********0010111010000000101100111110100011101111**********000011101000001111110000111110";
let b;
let a = [];
let c = ''
let str = ''
q = q.match(/.{1,10}/g); 
for (let i = 0; i<q.length; i++) {
    b = q[i].match(/10|11|\*{10}/g);
    for (let j = 0; j<b.length; j++) {
        if (b[j] == '10') 
            b[j] = '.';
        else if (b[j] == '11')
            b[j] = '-';
        else if (b[j] == '**********')
            b[j] = ' ';   

    }
    if (b == ' ') {
        str += ' '
        b = ''
    }    
    else {
        b = b.join('')
    // c += b;
        //b = '';
        str += MORSE_TABLE[b]
        b = ''
    }
}
console.log(str) */